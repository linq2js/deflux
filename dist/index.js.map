{"version":3,"sources":["../index.js"],"names":["React","symbolId","Date","getTime","toString","createSymbol","name","ComponentType","StoreType","initAction","defaultPropMapper","x","defaultPayloadFactory","firstArg","dummyState","unsafeSetState","unsafeUpdate","isDispatcher","isDescriber","isAction","ignore","isObservableListener","noop","undefined","isPlainObject","val","constructor","Object","subscriptionUniqueId","create","factory","describers","map","describer","withHoc","update","target","Error","createDescriber","f","createObservable","valueSelector","subscribe","subscriber","subscriberWrapper","args","value","listen","store","initialState","reducers","subscriptions","computedProps","linkedProps","middlewares","stores","observables","observableMappings","initMethods","initialized","currentState","updatingProps","recompute","prevState","descriptionContext","ownProps","evaluator","computer","nextValue","apply","addReducer","reducer","push","addStore","addMiddleware","middleware","unshift","getState","updateLinkedProps","length","destProp","sourceProp","prevValue","setState","nextState","notify","addObservable","observable","handleObservableChanged","debounce","forEach","prop","__lastValue","addProperty","descriptor","options","slice","action","dispatcher","assign","payload","dispatch","getStore","selector","callMiddleware","pendingDispatchings","reduce","next","state","reducerResult","wire","context","listenToUpdate","stateProp","type","actionResult","then","id","unsubscribed","notifiedSubscriptions","unsubscribedIndexes","i","subscription","splice","pop","updateProps","linkedProp","describingContext","objectType","isFirstTime","postUpdates","startReducer","initializedState","debouncedUpdateProps","subscribed","withReducer","shift","arg","subReducers","entries","data","Array","isArray","actions","filterByAction","subReducer","prevPropValue","includes","nextPropValue","withMiddleware","component","defaultComponent","hoc","propertyDescriptors","hocs","addHoc","order","propName","sort","a","b","mapProps","mappedProps","prevMappedProps","propsChanged","prevProps","props","propertyDescritor","rawPropValue","propValue","concat","ComponentWrapper","Component","unsubscribes","handleChange","unsubscribe","shouldComponentUpdate","nextProps","nextMappedProps","shallowEqual","componentWillUnmount","render","createElement","withProp","evaluatorFactory","fromState","fromStore","fromValue","fromObservable","fromPromise","defaultValue","shouldUpdate","loadingPayload","promisePropName","__payload","promise","result","error","fromProp","propNames","createPayloadFactory","withAction","actionKey","arguments","addAction","payloadFactory","ownedPropName","value1","value2","ignoreFuncs","value1Prop","value2Prop","value1Keys","keys","key","interval","callback","timer","clearTimeout","setTimeout","funcs","lastFunc","lastArgs","lastResult","wrapper","argSelectors","mappedArgs","reduxReducer","reduxAction","reduxMiddleware"],"mappings":"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","file":"index.js","sourcesContent":["import React from \"react\";\r\n\r\nconst symbolId = new Date().getTime().toString(36);\r\nconst createSymbol = name => name + symbolId;\r\nexport const ComponentType = createSymbol(\"Component\");\r\nexport const StoreType = createSymbol(\"Store\");\r\nconst initAction = createSymbol(\"InitAction\");\r\nconst defaultPropMapper = x => x;\r\nconst defaultPayloadFactory = firstArg => firstArg;\r\nconst dummyState = {};\r\nconst unsafeSetState = createSymbol(\"SetState\");\r\nconst unsafeUpdate = createSymbol(\"Update\");\r\nconst isDispatcher = createSymbol(\"Dispatcher\");\r\nconst isDescriber = createSymbol(\"Describer\");\r\nconst isAction = createSymbol(\"Action\");\r\nconst ignore = createSymbol(\"Ignore\");\r\nconst isObservableListener = createSymbol(\"ObservableListener\");\r\nconst noop = () => undefined;\r\nconst isPlainObject = val =>\r\n  !!val && typeof val === \"object\" && val.constructor === Object;\r\n\r\nlet subscriptionUniqueId = 1;\r\n\r\nexport function create(factory, ...describers) {\r\n  return factory(\r\n    describers.map(\r\n      describer => (describer[isDescriber] ? describer : withHoc(describer))\r\n    )\r\n  );\r\n}\r\n\r\nexport function update(target, ...describers) {\r\n  if (unsafeUpdate in target) {\r\n    return target[unsafeUpdate](\r\n      describers.map(\r\n        describer => (describer[isDescriber] ? describer : withHoc(describer))\r\n      )\r\n    );\r\n  }\r\n  throw new Error(\"Target object does not support update\");\r\n}\r\n\r\nexport function createDescriber(f) {\r\n  f[isDescriber] = true;\r\n  return f;\r\n}\r\n\r\nexport function createObservable(\r\n  target,\r\n  { valueSelector = (target, firstArg) => firstArg, subscribe } = {}\r\n) {\r\n  return {\r\n    subscribe(subscriber) {\r\n      function subscriberWrapper(...args) {\r\n        const value = valueSelector(target, ...args);\r\n        return subscriber(value);\r\n      }\r\n\r\n      if (subscribe) {\r\n        return subscribe(target, subscriberWrapper);\r\n      }\r\n      return (target.listen || target.subscribe)(subscriberWrapper);\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * create a store\r\n */\r\nexport function store(initialState) {\r\n  return function(describers) {\r\n    const reducers = [];\r\n    const subscriptions = [];\r\n    const computedProps = [];\r\n    const linkedProps = [];\r\n    const middlewares = [];\r\n    const stores = [];\r\n    const observables = [];\r\n    const observableMappings = [];\r\n    const initMethods = {};\r\n    let initialized = false;\r\n    let currentState = initialState;\r\n    let updatingProps = false;\r\n    let store;\r\n\r\n    function recompute() {\r\n      const prevState = currentState;\r\n      const descriptionContext = {\r\n        ownProps: currentState\r\n      };\r\n      for (let [name, evaluator, computer] of computedProps) {\r\n        const nextValue = computer.apply(null, evaluator(descriptionContext));\r\n\r\n        if (nextValue !== currentState[name]) {\r\n          if (currentState === prevState) {\r\n            currentState = {\r\n              ...currentState\r\n            };\r\n          }\r\n\r\n          currentState[name] = nextValue;\r\n        }\r\n      }\r\n    }\r\n\r\n    function addReducer(reducer) {\r\n      reducers.push(reducer);\r\n    }\r\n\r\n    function addStore(store) {\r\n      stores.push(store);\r\n    }\r\n\r\n    function addMiddleware(middleware) {\r\n      middlewares.unshift(middleware);\r\n    }\r\n\r\n    function getState() {\r\n      return currentState;\r\n    }\r\n\r\n    function updateLinkedProps() {\r\n      if (linkedProps.length) {\r\n        if (updatingProps) return;\r\n        try {\r\n          for (let [destProp, store, sourceProp] of linkedProps) {\r\n            const nextValue = currentState[destProp];\r\n            const prevValue = !sourceProp\r\n              ? store.getState()\r\n              : store.getState()[sourceProp];\r\n            // update source store\r\n            if (nextValue !== prevValue) {\r\n              if (!sourceProp) {\r\n                store[unsafeSetState](nextValue);\r\n              } else {\r\n                store[unsafeSetState]({\r\n                  ...store.getState(),\r\n                  [sourceProp]: nextValue\r\n                });\r\n              }\r\n            }\r\n          }\r\n        } finally {\r\n          updatingProps = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    function setState(nextState) {\r\n      if (nextState === currentState) return;\r\n      currentState = nextState;\r\n      updateLinkedProps();\r\n      // re-compute\r\n      recompute();\r\n\r\n      notify();\r\n    }\r\n\r\n    function addObservable(observable) {\r\n      observables.push(observable);\r\n    }\r\n\r\n    const handleObservableChanged = debounce(0, () => {\r\n      let nextState = currentState;\r\n      observableMappings.forEach(({ observables, prop, map }) => {\r\n        const nextValue = map.apply(\r\n          null,\r\n          observables.map(observable => observable.__lastValue)\r\n        );\r\n\r\n        if (nextValue !== nextState[prop]) {\r\n          if (nextState === currentState) {\r\n            nextState = {\r\n              ...currentState\r\n            };\r\n          }\r\n          nextState[prop] = nextValue;\r\n        }\r\n      });\r\n      setState(nextState);\r\n    });\r\n\r\n    function addProperty(name, descriptor, map, options) {\r\n      if (observables.length) {\r\n        if (!map) {\r\n          map = defaultPropMapper;\r\n        }\r\n        observableMappings.push({\r\n          prop: name,\r\n          map,\r\n          observables: observables.slice(0)\r\n        });\r\n        observables.forEach(observable => {\r\n          observable.subscribe(value => {\r\n            observable.__lastValue = value;\r\n            handleObservableChanged();\r\n          });\r\n        });\r\n\r\n        observables.length = 0;\r\n        return;\r\n      }\r\n\r\n      if (typeof map !== \"function\" && map !== false) {\r\n        // create linked prop\r\n        if (!stores.length) {\r\n          throw new Error(\"At least store required to create linked prop\");\r\n        } else if (stores.length > 1) {\r\n          throw new Error(\"Linked prop requires only a store\");\r\n        }\r\n        linkedProps.push([name, stores[0], map, options]);\r\n        stores.length = 0;\r\n      } else if (descriptor[isAction]) {\r\n        const action = descriptor;\r\n        const dispatcher = Object.assign(\r\n          payload => {\r\n            store.dispatch(action, payload);\r\n          },\r\n          {\r\n            [StoreType]: getStore\r\n          }\r\n        );\r\n\r\n        if (store) {\r\n          if (name in store) {\r\n            // overwrite existing method is not allowed\r\n          } else {\r\n            store[name] = dispatcher;\r\n          }\r\n        } else {\r\n          initMethods[name] = dispatcher;\r\n        }\r\n      } else {\r\n        computedProps.push([name, descriptor, selector(map), options]);\r\n      }\r\n    }\r\n\r\n    function callMiddleware(action, payload) {\r\n      // action creator result\r\n      // call middlewares and reducers\r\n      const pendingDispatchings = [];\r\n      const prevState = currentState;\r\n      currentState = middlewares.reduce(\r\n        (next, middleware) => {\r\n          return function(action, payload) {\r\n            return middleware(store)(next)(action, payload);\r\n          };\r\n        },\r\n        (action, payload) => {\r\n          return reducers.reduce((state, reducer) => {\r\n            const reducerResult = reducer(state, action, payload);\r\n            // support lazy dispatching inside reducer\r\n            if (typeof reducerResult === \"function\") {\r\n              reducerResult((...args) => pendingDispatchings.push(args));\r\n              return state;\r\n            }\r\n            return reducerResult;\r\n          }, currentState);\r\n        }\r\n      )(action, payload);\r\n\r\n      if (currentState !== prevState) {\r\n        updateLinkedProps();\r\n        recompute();\r\n        notify();\r\n      }\r\n\r\n      if (pendingDispatchings.length) {\r\n        for (let [action, payload] of pendingDispatchings) {\r\n          dispatch(action, payload);\r\n        }\r\n      }\r\n    }\r\n\r\n    function wire(context, { listenToUpdate, stateProp } = {}) {}\r\n\r\n    function dispatch(action, payload) {\r\n      if (isPlainObject(action)) {\r\n        // is redux action\r\n        const { type, ...payload } = action;\r\n        callMiddleware(type, payload);\r\n        return;\r\n      }\r\n      let actionResult = action(payload);\r\n      if (typeof actionResult === \"function\") {\r\n        actionResult = actionResult(currentState);\r\n        if (typeof actionResult === \"function\") {\r\n          actionResult = actionResult(dispatch, getState);\r\n          return actionResult;\r\n        } else {\r\n          // new state\r\n          if (actionResult && typeof actionResult.then === \"function\") {\r\n            return actionResult.then(setState);\r\n          } else {\r\n            setState(actionResult);\r\n          }\r\n        }\r\n      } else {\r\n        callMiddleware(action, actionResult);\r\n      }\r\n    }\r\n\r\n    function getStore() {\r\n      return store;\r\n    }\r\n\r\n    function subscribe(subscriber) {\r\n      if (!subscriber.id) {\r\n        subscriber.id = subscriptionUniqueId++;\r\n      }\r\n      subscriptions.push(subscriber);\r\n\r\n      return function() {\r\n        subscriber.unsubscribed = true;\r\n      };\r\n    }\r\n\r\n    function notify(notifiedSubscriptions = {}) {\r\n      const unsubscribedIndexes = [];\r\n      for (let i = 0; i < subscriptions.length; i++) {\r\n        const subscription = subscriptions[i];\r\n        // do nothing if subscription is unsubscribed\r\n        if (subscription.unsubscribed) {\r\n          unsubscribedIndexes.push(i);\r\n        } else if (subscription.id in notifiedSubscriptions) {\r\n          // do nothing if subscription is already notified\r\n        } else {\r\n          // mark subscription is notified\r\n          notifiedSubscriptions[subscription.id] = true;\r\n          subscription(currentState);\r\n        }\r\n      }\r\n\r\n      // remove unsubscribed subscriptions\r\n      while (unsubscribedIndexes.length) {\r\n        subscriptions.splice(unsubscribedIndexes.pop(), 1);\r\n      }\r\n    }\r\n\r\n    const updateProps = () => {\r\n      if (updatingProps) return;\r\n\r\n      updatingProps = true;\r\n      try {\r\n        const prevState = currentState;\r\n        for (let linkedProp of linkedProps) {\r\n          const [destProp, store, sourceProp] = linkedProp;\r\n          const nextValue = !sourceProp\r\n            ? store.getState()\r\n            : store.getState()[sourceProp];\r\n\r\n          if (currentState[destProp] !== nextValue) {\r\n            if (currentState === prevState) {\r\n              currentState = {\r\n                ...currentState\r\n              };\r\n            }\r\n\r\n            currentState[destProp] = nextValue;\r\n          }\r\n        }\r\n\r\n        if (currentState !== prevState) {\r\n          recompute();\r\n          notify();\r\n        }\r\n      } finally {\r\n        updatingProps = false;\r\n      }\r\n    };\r\n\r\n    function update(describers) {\r\n      const describingContext = {\r\n        objectType: StoreType,\r\n        getStore,\r\n        addReducer,\r\n        addStore,\r\n        addMiddleware,\r\n        addProperty,\r\n        addObservable\r\n      };\r\n      const isFirstTime = !initialized;\r\n      const postUpdates = [];\r\n      initialized = true;\r\n      const startReducer = reducers.length;\r\n\r\n      describers.forEach(describer => describer(describingContext));\r\n\r\n      // call init action\r\n      const initializedState = reducers\r\n        .slice(startReducer)\r\n        .reduce(\r\n          (state, reducer) => reducer(state, initAction, {}),\r\n          currentState\r\n        );\r\n      if (currentState !== initializedState) {\r\n        if (isFirstTime) {\r\n          currentState = initializedState;\r\n        } else {\r\n          postUpdates.push(notify);\r\n        }\r\n      }\r\n      const debouncedUpdateProps = debounce(0, updateProps);\r\n\r\n      if (linkedProps.length) {\r\n        if (currentState === null || currentState === undefined) {\r\n          currentState = {};\r\n        }\r\n\r\n        linkedProps.forEach(linkedProp => {\r\n          if (linkedProp.subscribed) return;\r\n          linkedProp.subscribed = true;\r\n          linkedProp[1].subscribe(debouncedUpdateProps);\r\n        });\r\n\r\n        updateProps();\r\n      }\r\n\r\n      if (computedProps.length) {\r\n        recompute();\r\n      }\r\n\r\n      postUpdates.forEach(update => update());\r\n    }\r\n\r\n    update(describers);\r\n\r\n    return (store = {\r\n      ...initMethods,\r\n      getState,\r\n      subscribe,\r\n      dispatch,\r\n      [unsafeUpdate]: update,\r\n      [unsafeSetState]: setState\r\n    });\r\n  };\r\n}\r\n\r\n/**\r\n * add reducer to store\r\n * withReducer(prop, reducer)\r\n * withReducer(prop, action1, action2, reducer)\r\n * withReducer({ prop: reducer, prop: reducer })\r\n * withReducer({ prop: [action1, action2, reducer], prop:[action1, action2, reducer] })\r\n */\r\nexport function withReducer(...args) {\r\n  return createDescriber(function(describingContext) {\r\n    const { addReducer } = describingContext;\r\n    if (typeof args[0] === \"function\") {\r\n      args.forEach(reducer => addReducer(reducer));\r\n    } else if (typeof args[0] === \"string\") {\r\n      const prop = args.shift();\r\n      return withReducer({\r\n        [prop]: args\r\n      })(describingContext);\r\n    } else {\r\n      args.forEach(arg => {\r\n        const subReducers = Object.entries(arg).map(([prop, data]) => {\r\n          if (!Array.isArray(data)) {\r\n            data = [data];\r\n          }\r\n          const reducer = data.pop();\r\n          const actions = data;\r\n\r\n          return {\r\n            prop,\r\n            actions,\r\n            filterByAction: !!actions.length,\r\n            reducer\r\n          };\r\n        });\r\n\r\n        addReducer(function(state, action, payload) {\r\n          const prevState = state;\r\n          for (let subReducer of subReducers) {\r\n            const prevPropValue = state[subReducer.prop];\r\n            if (\r\n              subReducer.filterByAction &&\r\n              !subReducer.actions.includes(action)\r\n            ) {\r\n              continue;\r\n            }\r\n\r\n            const nextPropValue = subReducer.reducer(\r\n              prevPropValue,\r\n              action,\r\n              payload\r\n            );\r\n            if (nextPropValue !== prevPropValue) {\r\n              if (state === prevState) {\r\n                // clone state before update\r\n                if (Array.isArray(state)) {\r\n                  state = state.slice(0);\r\n                } else {\r\n                  state = {\r\n                    ...state\r\n                  };\r\n                }\r\n              }\r\n              state[subReducer.prop] = nextPropValue;\r\n            }\r\n          }\r\n\r\n          return state;\r\n        });\r\n      });\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * add middleware to store\r\n */\r\nexport function withMiddleware(...middlewares) {\r\n  return createDescriber(function({ addMiddleware }) {\r\n    middlewares.forEach(addMiddleware);\r\n  });\r\n}\r\n\r\n/**\r\n * create a component/hoc\r\n */\r\nexport function component(defaultComponent) {\r\n  return function(describers) {\r\n    const hoc = function(component) {\r\n      const propertyDescriptors = [];\r\n      const stores = [];\r\n      const observables = [];\r\n      const hocs = [];\r\n      const describingContext = {\r\n        objectType: ComponentType,\r\n        component,\r\n        addStore,\r\n        addProperty,\r\n        addHoc,\r\n        addObservable\r\n      };\r\n      describers.forEach(describer => describer(describingContext));\r\n\r\n      function addStore(store) {\r\n        stores.push(store);\r\n      }\r\n\r\n      function addObservable(observable) {\r\n        observables.push(observable);\r\n      }\r\n\r\n      function addHoc(hoc) {\r\n        hocs.push(hoc);\r\n      }\r\n\r\n      function addProperty(\r\n        name,\r\n        descriptor,\r\n        map = defaultPropMapper,\r\n        options,\r\n        order = 0\r\n      ) {\r\n        if (typeof map === \"string\") {\r\n          const propName = map;\r\n          map = x => x[propName];\r\n        }\r\n\r\n        propertyDescriptors.push([name, descriptor, map, options, order]);\r\n        // re-sort descriptors\r\n        propertyDescriptors.sort((a, b) => a[4] - b[4]);\r\n      }\r\n\r\n      function mapProps(component, ownProps) {\r\n        const mappedProps = {};\r\n        const descriptionContext = {\r\n          component,\r\n          ownProps,\r\n          mappedProps,\r\n          prevMappedProps: component.prevMappedProps || {},\r\n          // detech prop changed\r\n          propsChanged:\r\n            component.prevProps && component.prevProps !== component.props\r\n        };\r\n\r\n        component.prevProps = component.props;\r\n        component.prevMappedProps = mappedProps;\r\n\r\n        for (let [propName, propertyDescritor, map] of propertyDescriptors) {\r\n          const rawPropValue = propertyDescritor(\r\n            descriptionContext,\r\n            propName,\r\n            map\r\n          );\r\n          if (rawPropValue === ignore) continue;\r\n          let propValue =\r\n            map !== false\r\n              ? map.apply(null, rawPropValue.concat([descriptionContext]))\r\n              : rawPropValue;\r\n\r\n          if (typeof propValue === \"function\" && !propValue[isDispatcher]) {\r\n            propValue = propValue(descriptionContext);\r\n          }\r\n\r\n          if (propName === \"*\") {\r\n            Object.assign(mappedProps, propValue);\r\n          } else {\r\n            mappedProps[propName] = propValue;\r\n          }\r\n        }\r\n\r\n        return mappedProps;\r\n      }\r\n\r\n      return hocs.reduce(\r\n        (component, hoc) => hoc(component),\r\n        class ComponentWrapper extends React.Component {\r\n          constructor(props) {\r\n            super(props);\r\n            // perform first mapping\r\n            // collect all dependency stores if any\r\n            this.mappedProps = mapProps(this, props);\r\n\r\n            const unsubscribes = [];\r\n\r\n            const handleChange = () => this.setState(dummyState);\r\n\r\n            unsubscribes.push(\r\n              ...stores.map(store => store.subscribe(handleChange))\r\n            );\r\n\r\n            unsubscribes.push(\r\n              ...observables.map(observable => {\r\n                return observable.subscribe(value => {\r\n                  observable.__lastValue = value;\r\n                  handleChange();\r\n                });\r\n              })\r\n            );\r\n\r\n            this.unsubscribe = () =>\r\n              unsubscribes.forEach(unsubscribe => {\r\n                if (\r\n                  unsubscribe &&\r\n                  typeof unsubscribe.unsubscribe === \"function\"\r\n                ) {\r\n                  unsubscribe.unsubscribe();\r\n                } else if (typeof unsubscribe === \"function\") {\r\n                  unsubscribe();\r\n                }\r\n              });\r\n          }\r\n\r\n          shouldComponentUpdate(nextProps) {\r\n            const nextMappedProps = mapProps(this, nextProps);\r\n            if (shallowEqual(nextMappedProps, this.mappedProps, true))\r\n              return false;\r\n            this.mappedProps = nextMappedProps;\r\n            return true;\r\n          }\r\n\r\n          componentWillUnmount() {\r\n            this.unsubscribe();\r\n          }\r\n\r\n          render() {\r\n            return React.createElement(component, this.mappedProps);\r\n          }\r\n        }\r\n      );\r\n    };\r\n\r\n    if (defaultComponent) {\r\n      return hoc(defaultComponent);\r\n    }\r\n    return hoc;\r\n  };\r\n}\r\n\r\n/**\r\n * describe prop for component\r\n */\r\nexport function withProp(name, evaluatorFactory, map, options) {\r\n  return createDescriber(function(describingContext) {\r\n    const { addProperty } = describingContext;\r\n    const evaluator = evaluatorFactory(describingContext);\r\n\r\n    addProperty(\r\n      name,\r\n      function(descriptionContext) {\r\n        return evaluator(descriptionContext);\r\n      },\r\n      map,\r\n      options\r\n    );\r\n  });\r\n}\r\n\r\n/**\r\n * get value from component state\r\n */\r\nexport function fromState(...props) {\r\n  return function({ objectType }) {\r\n    if (objectType !== ComponentType) {\r\n      throw new Error(\"fromState can be used with component()\");\r\n    }\r\n    return function(descriptionContext) {\r\n      const state = descriptionContext.component.state || {};\r\n      return props.map(prop => state[prop]);\r\n    };\r\n  };\r\n}\r\n\r\n// get value from store\r\nexport function fromStore(...stores) {\r\n  return function({ addStore }) {\r\n    stores.forEach(store => addStore(store));\r\n\r\n    return function() {\r\n      return stores.map(store => store.getState());\r\n    };\r\n  };\r\n}\r\n\r\nexport function fromValue(factory) {\r\n  return function() {\r\n    return function(descriptionContext) {\r\n      return [factory(descriptionContext)];\r\n    };\r\n  };\r\n}\r\n\r\nexport function fromObservable(...observables) {\r\n  return function({ addObservable }) {\r\n    observables.forEach(observable => addObservable(observable));\r\n    return Object.assign(\r\n      function() {\r\n        return observables.map(observable => observable.__lastValue);\r\n      },\r\n      {\r\n        [isObservableListener]: true\r\n      }\r\n    );\r\n  };\r\n}\r\n\r\nexport function fromPromise(\r\n  factory,\r\n  { defaultValue, shouldUpdate = noop } = {}\r\n) {\r\n  const loadingPayload = [defaultValue, \"loading\"];\r\n  return function({ objectType }) {\r\n    if (objectType !== ComponentType) {\r\n      throw new Error(\"fromPromise can be used with component()\");\r\n    }\r\n    return function(descriptionContext, propName) {\r\n      const { component } = descriptionContext;\r\n      const promisePropName = `__${propName}Promise`;\r\n\r\n      if (component[promisePropName]) {\r\n        if (shouldUpdate(descriptionContext, component[promisePropName])) {\r\n        } else {\r\n          return component[promisePropName].__payload;\r\n        }\r\n      }\r\n\r\n      const promise = factory(descriptionContext);\r\n\r\n      if (!promise) {\r\n        return [defaultValue, \"\"];\r\n      }\r\n\r\n      promise.__payload = loadingPayload;\r\n\r\n      component[promisePropName] = promise;\r\n\r\n      promise.then(\r\n        // handle success\r\n        result => {\r\n          if (component[promisePropName] === promise) {\r\n            component[promisePropName].__payload = [result, \"success\"];\r\n            // reload\r\n            component.setState(dummyState);\r\n          }\r\n        },\r\n        // handle failure\r\n        error => {\r\n          if (component[promisePropName] === promise) {\r\n            component[promisePropName].__payload = [\r\n              defaultValue,\r\n              \"failure\",\r\n              error\r\n            ];\r\n            // reload\r\n            component.setState(dummyState);\r\n          }\r\n        }\r\n      );\r\n\r\n      return promise.__payload;\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * get value from props\r\n */\r\nexport function fromProp(...propNames) {\r\n  return function() {\r\n    return function({ ownProps }) {\r\n      return propNames.map(propName => ownProps[propName]);\r\n    };\r\n  };\r\n}\r\n\r\nfunction createPayloadFactory() {\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * add wired action to component props\r\n */\r\nexport function withAction(name, store, ...args) {\r\n  return createDescriber(function(describingContext) {\r\n    const { objectType, addProperty } = describingContext;\r\n    if (objectType === StoreType) {\r\n      return addProperty(\r\n        name,\r\n        Object.assign(store, { [isAction]: true }),\r\n        false\r\n      );\r\n    } else {\r\n      // is component type\r\n      let getStore;\r\n      // withAction('name', store.action, payloadFactory)\r\n      if (typeof store === \"function\") {\r\n        const action = store;\r\n        if (action[StoreType]) {\r\n          args.unshift(action);\r\n          getStore = action[StoreType];\r\n        } else {\r\n          const actionKey = `__action` + name;\r\n          addProperty(\r\n            name,\r\n            function({ component }) {\r\n              if (component[actionKey]) return component[actionKey];\r\n              return (component[actionKey] = Object.assign(\r\n                function() {\r\n                  return action.apply(component, arguments);\r\n                },\r\n                {\r\n                  [isDispatcher]: true\r\n                }\r\n              ));\r\n            },\r\n            false\r\n          );\r\n          return;\r\n        }\r\n      } else {\r\n        getStore = () => {\r\n          return store;\r\n        };\r\n        // withAction('name', store, action, payloadFactory)\r\n      }\r\n      return addAction(describingContext, name, getStore, ...args);\r\n    }\r\n  });\r\n}\r\n\r\nfunction addAction(\r\n  describingContext,\r\n  name,\r\n  getStore,\r\n  action,\r\n  payloadFactory = defaultPayloadFactory\r\n) {\r\n  const { addProperty } = describingContext;\r\n\r\n  if (typeof payloadFactory === \"string\") {\r\n    const ownedPropName = payloadFactory;\r\n    payloadFactory = () => ({ ownProps }) => ownProps[ownedPropName];\r\n  } else if (typeof payloadFactory !== \"function\") {\r\n    payloadFactory = createPayloadFactory(payloadFactory, describingContext);\r\n  }\r\n\r\n  addProperty(\r\n    name,\r\n    function(descriptionContext) {\r\n      return Object.assign(\r\n        function() {\r\n          let payload = payloadFactory.apply(null, arguments);\r\n\r\n          if (typeof payload === \"function\") {\r\n            payload = payload(descriptionContext, action);\r\n          }\r\n\r\n          // support redux action\r\n          if (!action) {\r\n            return getStore().dispatch(payload);\r\n          }\r\n          return getStore().dispatch(action, payload);\r\n        },\r\n        {\r\n          [isDispatcher]: true\r\n        }\r\n      );\r\n    },\r\n    false\r\n  );\r\n}\r\n\r\nexport function withHoc(...hocs) {\r\n  return createDescriber(function({ addHoc }) {\r\n    hocs.forEach(hoc => addHoc(hoc));\r\n  });\r\n}\r\n\r\nexport function shallowEqual(value1, value2, ignoreFuncs) {\r\n  if (value1 === value2) return true;\r\n  // compare date\r\n  if (value1 instanceof Date && value2 instanceof Date) {\r\n    return value1.getTime() === value2.getTime();\r\n  }\r\n  if (value1 && value2) {\r\n    if (Array.isArray(value1)) {\r\n      const length = value1.length;\r\n      if (length !== value2.length) return false;\r\n      for (let i = 0; i < length; i++) {\r\n        const value1Prop = value1[i];\r\n        const value2Prop = value2[i];\r\n        if (\r\n          ignoreFuncs &&\r\n          typeof value1Prop === \"function\" &&\r\n          typeof value2Prop === \"function\"\r\n        )\r\n          continue;\r\n        if (value1Prop !== value2Prop) return false;\r\n      }\r\n      return true;\r\n    }\r\n    const value1Keys = Object.keys(value1);\r\n    if (value1Keys.length !== Object.keys(value2).length) return false;\r\n    for (let key of value1Keys) {\r\n      const value1Prop = value1[key];\r\n      const value2Prop = value2[key];\r\n      if (\r\n        ignoreFuncs &&\r\n        typeof value1Prop === \"function\" &&\r\n        typeof value2Prop === \"function\"\r\n      )\r\n        continue;\r\n      if (value1Prop !== value2Prop) return false;\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function debounce(interval, callback) {\r\n  let timer;\r\n\r\n  return function() {\r\n    const args = arguments;\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => callback.apply(null, args), interval);\r\n  };\r\n}\r\n\r\nexport function selector(...funcs) {\r\n  const lastFunc = funcs.pop();\r\n  let lastArgs, lastResult;\r\n  const wrapper = function(...args) {\r\n    if (shallowEqual(lastArgs, args)) {\r\n      return lastResult;\r\n    }\r\n    lastArgs = args;\r\n    return (lastResult = lastFunc.apply(null, args));\r\n  };\r\n\r\n  if (!funcs.length) {\r\n    return wrapper;\r\n  }\r\n\r\n  const argSelectors = funcs.map(x => selector(x));\r\n  return function(...args) {\r\n    const mappedArgs = argSelectors.map(x => x.apply(null, args));\r\n    return wrapper.apply(null, mappedArgs);\r\n  };\r\n}\r\n\r\nexport function reduxReducer(reducer) {\r\n  return function(state, action, payload) {\r\n    if (isPlainObject(payload)) {\r\n      const reduxAction = {\r\n        ...payload,\r\n        type: action\r\n      };\r\n\r\n      return reducer(state, reduxAction);\r\n    }\r\n    return state;\r\n  };\r\n}\r\n\r\nexport function reduxMiddleware(middleware) {\r\n  return store => next => (action, payload) => {\r\n    if (isPlainObject(payload)) {\r\n      return middleware(store)(reduxAction => {\r\n        return next(action.type, action);\r\n      })({\r\n        ...payload,\r\n        type: action\r\n      });\r\n    }\r\n    return next(action, payload);\r\n  };\r\n}\r\n"]}