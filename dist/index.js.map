{"version":3,"sources":["../index.js"],"names":["React","ComponentType","Symbol","StoreType","defaultPropMapper","x","defaultPayloadFactory","context","firstArg","dummyState","unsafeSetState","unsafeUpdate","isDispatcher","isAction","subscriptionUniqueId","create","factory","describers","update","target","Error","store","initialState","reducers","subscriptions","computedProps","linkedProps","middlewares","stores","initMethods","currentState","updatingProps","recompute","prevState","descriptionContext","ownedProps","name","evaluator","computer","nextValue","apply","addReducer","reducer","push","addStore","addMiddleware","middleware","unshift","getState","updateLinkedProps","length","destProp","sourceProp","prevValue","setState","nextState","notify","addProperty","descriptor","map","options","action","dispatcher","Object","assign","payload","dispatch","getStore","selector","actionResult","then","pendingDispatchings","reduce","next","state","reducerResult","args","subscribe","subscriber","id","unsubscribed","notifiedSubscriptions","unsubscribedIndexes","i","subscription","splice","pop","updateProps","linkedProp","describingContext","objectType","forEach","describer","debouncedUpdateProps","debounce","undefined","subscribed","withReducer","withMiddleware","component","defaultComponent","hoc","propertyDescriptors","hocs","addHoc","order","propName","sort","a","b","mapProps","mappedProps","propertyDescritor","rawPropValue","propValue","concat","ComponentWrapper","Component","constructor","props","handleChange","shouldComponentUpdate","nextProps","nextMappedProps","shallowEqual","render","createElement","withProp","evaluatorFactory","fromStore","fromProp","propNames","createPayloadFactory","withAction","addAction","payloadFactory","ownedPropName","arguments","withHoc","value1","value2","ignoreFuncs","Date","getTime","Array","isArray","value1Prop","value2Prop","value1Keys","keys","key","interval","callback","timer","clearTimeout","setTimeout","funcs","lastFunc","lastArgs","lastResult","wrapper","argSelectors","mappedArgs"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\r\n\r\nexport const ComponentType = Symbol('Component');\r\nexport const StoreType = Symbol('Store');\r\nconst defaultPropMapper = x => x;\r\nconst defaultPayloadFactory = (context, firstArg) => firstArg;\r\nconst dummyState = {};\r\nconst unsafeSetState = Symbol('SetState');\r\nconst unsafeUpdate = Symbol('Update');\r\nconst isDispatcher = Symbol('Dispatcher');\r\nconst isAction = Symbol('Action');\r\nlet subscriptionUniqueId = 1;\r\n\r\nexport function create(factory, ...describers) {\r\n  return factory(describers);\r\n}\r\n\r\nexport function update(target, ...describers) {\r\n  if (unsafeUpdate in target) {\r\n    return target[unsafeUpdate](describers);\r\n  }\r\n  throw new Error('Target object does not support update');\r\n}\r\n\r\n/**\r\n * create a store\r\n */\r\nexport function store(initialState) {\r\n  return function(describers) {\r\n    const reducers = [];\r\n    const subscriptions = [];\r\n    const computedProps = [];\r\n    const linkedProps = [];\r\n    const middlewares = [];\r\n    const stores = [];\r\n    const initMethods = {};\r\n\r\n    let currentState = initialState;\r\n    let updatingProps = false;\r\n    let store;\r\n\r\n    function recompute() {\r\n      const prevState = currentState;\r\n      const descriptionContext = {\r\n        ownedProps: currentState\r\n      };\r\n      for (let [name, evaluator, computer] of computedProps) {\r\n        const nextValue = computer.apply(null, evaluator(descriptionContext));\r\n\r\n        if (nextValue !== currentState[name]) {\r\n          if (currentState === prevState) {\r\n            currentState = {\r\n              ...currentState\r\n            };\r\n          }\r\n\r\n          currentState[name] = nextValue;\r\n        }\r\n      }\r\n    }\r\n\r\n    function addReducer(reducer) {\r\n      reducers.push(reducer);\r\n    }\r\n\r\n    function addStore(store) {\r\n      stores.push(store);\r\n    }\r\n\r\n    function addMiddleware(middleware) {\r\n      middlewares.unshift(middleware);\r\n    }\r\n\r\n    function getState() {\r\n      return currentState;\r\n    }\r\n\r\n    function updateLinkedProps() {\r\n      if (linkedProps.length) {\r\n        if (updatingProps) return;\r\n        try {\r\n          for (let [destProp, store, sourceProp] of linkedProps) {\r\n            const nextValue = currentState[destProp];\r\n            const prevValue = !sourceProp\r\n              ? store.getState()\r\n              : store.getState()[sourceProp];\r\n            // update source store\r\n            if (nextValue !== prevValue) {\r\n              if (!sourceProp) {\r\n                store[unsafeSetState](nextValue);\r\n              } else {\r\n                store[unsafeSetState]({\r\n                  ...store.getState(),\r\n                  [sourceProp]: nextValue\r\n                });\r\n              }\r\n            }\r\n          }\r\n        } finally {\r\n          updatingProps = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    function setState(nextState) {\r\n      if (nextState === currentState) return;\r\n      currentState = nextState;\r\n      updateLinkedProps();\r\n      // re-compute\r\n      recompute();\r\n\r\n      notify();\r\n    }\r\n\r\n    function addProperty(name, descriptor, map, options) {\r\n      if (typeof map !== 'function' && map !== false) {\r\n        // create linked prop\r\n        if (!stores.length) {\r\n          throw new Error('At least store required to create linked prop');\r\n        } else if (stores.length > 1) {\r\n          throw new Error('Linked prop requires only a store');\r\n        }\r\n        linkedProps.push([name, stores[0], map, options]);\r\n        stores.length = 0;\r\n      } else if (descriptor[isAction]) {\r\n        const action = descriptor;\r\n        const dispatcher = Object.assign(\r\n          payload => {\r\n            store.dispatch(action, payload);\r\n          },\r\n          {\r\n            [StoreType]: getStore\r\n          }\r\n        );\r\n\r\n        if (store) {\r\n          if (name in store) {\r\n            // overwrite existing method is not allowed\r\n          } else {\r\n            store[name] = dispatcher;\r\n          }\r\n        } else {\r\n          initMethods[name] = dispatcher;\r\n        }\r\n      } else {\r\n        computedProps.push([name, descriptor, selector(map), options]);\r\n      }\r\n    }\r\n\r\n    function dispatch(action, payload) {\r\n      let actionResult = action(payload);\r\n      if (typeof actionResult === 'function') {\r\n        actionResult = actionResult(currentState);\r\n        if (typeof actionResult === 'function') {\r\n          actionResult = actionResult(dispatch, getState);\r\n          return actionResult;\r\n        } else {\r\n          // new state\r\n          if (actionResult && typeof actionResult.then === 'function') {\r\n            return actionResult.then(setState);\r\n          } else {\r\n            setState(actionResult);\r\n          }\r\n        }\r\n      } else {\r\n        // action creator result\r\n        // call middlewares and reducers\r\n        const pendingDispatchings = [];\r\n        const prevState = currentState;\r\n        currentState = middlewares.reduce(\r\n          (next, middleware) => {\r\n            return function(action, payload) {\r\n              return middleware(store)(next)(action, payload);\r\n            };\r\n          },\r\n          (action, payload) => {\r\n            return reducers.reduce((state, reducer) => {\r\n              const reducerResult = reducer(state, action, payload);\r\n              // support lazy dispatching inside reducer\r\n              if (typeof reducerResult === 'function') {\r\n                reducerResult((...args) => pendingDispatchings.push(args));\r\n                return state;\r\n              }\r\n              return reducerResult;\r\n            }, currentState);\r\n          }\r\n        )(action, actionResult);\r\n\r\n        if (currentState !== prevState) {\r\n          updateLinkedProps();\r\n          recompute();\r\n          notify();\r\n        }\r\n\r\n        if (pendingDispatchings.length) {\r\n          for (let [action, payload] of pendingDispatchings) {\r\n            dispatch(action, payload);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function getStore() {\r\n      return store;\r\n    }\r\n\r\n    function subscribe(subscriber) {\r\n      if (!subscriber.id) {\r\n        subscriber.id = subscriptionUniqueId++;\r\n      }\r\n      subscriptions.push(subscriber);\r\n\r\n      return function() {\r\n        subscriber.unsubscribed = true;\r\n      };\r\n    }\r\n\r\n    function notify(notifiedSubscriptions = {}) {\r\n      const unsubscribedIndexes = [];\r\n      for (let i = 0; i < subscriptions.length; i++) {\r\n        const subscription = subscriptions[i];\r\n        // do nothing if subscription is unsubscribed\r\n        if (subscription.unsubscribed) {\r\n          unsubscribedIndexes.push(i);\r\n        } else if (subscription.id in notifiedSubscriptions) {\r\n          // do nothing if subscription is already notified\r\n        } else {\r\n          // mark subscription is notified\r\n          notifiedSubscriptions[subscription.id] = true;\r\n          subscription(currentState);\r\n        }\r\n      }\r\n\r\n      // remove unsubscribed subscriptions\r\n      while (unsubscribedIndexes.length) {\r\n        subscriptions.splice(unsubscribedIndexes.pop(), 1);\r\n      }\r\n    }\r\n\r\n    const updateProps = () => {\r\n      if (updatingProps) return;\r\n\r\n      updatingProps = true;\r\n      try {\r\n        const prevState = currentState;\r\n        for (let linkedProp of linkedProps) {\r\n          const [destProp, store, sourceProp] = linkedProp;\r\n          const nextValue = !sourceProp\r\n            ? store.getState()\r\n            : store.getState()[sourceProp];\r\n\r\n          if (currentState[destProp] !== nextValue) {\r\n            if (currentState === prevState) {\r\n              currentState = {\r\n                ...currentState\r\n              };\r\n            }\r\n\r\n            currentState[destProp] = nextValue;\r\n          }\r\n        }\r\n\r\n        if (currentState !== prevState) {\r\n          recompute();\r\n          notify();\r\n        }\r\n      } finally {\r\n        updatingProps = false;\r\n      }\r\n    };\r\n\r\n    function update(describers) {\r\n      const describingContext = {\r\n        objectType: StoreType,\r\n        getStore,\r\n        addReducer,\r\n        addStore,\r\n        addMiddleware,\r\n        addProperty\r\n      };\r\n\r\n      describers.forEach(describer => describer(describingContext));\r\n\r\n      const debouncedUpdateProps = debounce(0, updateProps);\r\n\r\n      if (linkedProps.length) {\r\n        if (currentState === null || currentState === undefined) {\r\n          currentState = {};\r\n        }\r\n\r\n        linkedProps.forEach(linkedProp => {\r\n          if (linkedProp.subscribed) return;\r\n          linkedProp.subscribed = true;\r\n          linkedProp[1].subscribe(debouncedUpdateProps);\r\n        });\r\n\r\n        updateProps();\r\n      }\r\n\r\n      if (computedProps.length) {\r\n        recompute();\r\n      }\r\n    }\r\n\r\n    update(describers);\r\n\r\n    return (store = {\r\n      ...initMethods,\r\n      getState,\r\n      subscribe,\r\n      dispatch,\r\n      [unsafeUpdate]: update,\r\n      [unsafeSetState]: setState\r\n    });\r\n  };\r\n}\r\n\r\n/**\r\n * add reducer to store\r\n */\r\nexport function withReducer(...reducers) {\r\n  return function({ addReducer }) {\r\n    reducers.forEach(addReducer);\r\n  };\r\n}\r\n\r\n/**\r\n * add middleware to store\r\n */\r\nexport function withMiddleware(...middlewares) {\r\n  return function({ addMiddleware }) {\r\n    middlewares.forEach(addMiddleware);\r\n  };\r\n}\r\n\r\n/**\r\n * create a component/hoc\r\n */\r\nexport function component(defaultComponent) {\r\n  return function(describers) {\r\n    const hoc = function(component) {\r\n      const propertyDescriptors = [];\r\n      const stores = [];\r\n      const hocs = [];\r\n      const describingContext = {\r\n        objectType: ComponentType,\r\n        component,\r\n        addStore,\r\n        addProperty,\r\n        addHoc\r\n      };\r\n      describers.forEach(describer => describer(describingContext));\r\n\r\n      function addStore(store) {\r\n        stores.push(store);\r\n      }\r\n\r\n      function addHoc(hoc) {\r\n        hocs.push(hoc);\r\n      }\r\n\r\n      function addProperty(\r\n        name,\r\n        descriptor,\r\n        map = defaultPropMapper,\r\n        options,\r\n        order = 0\r\n      ) {\r\n        if (typeof map === 'string') {\r\n          const propName = map;\r\n          map = x => x[propName];\r\n        }\r\n\r\n        propertyDescriptors.push([name, descriptor, map, options, order]);\r\n        // re-sort descriptors\r\n        propertyDescriptors.sort((a, b) => a[4] - b[4]);\r\n      }\r\n\r\n      function mapProps(ownedProps) {\r\n        const mappedProps = {};\r\n        const descriptionContext = {\r\n          ownedProps,\r\n          mappedProps\r\n        };\r\n\r\n        for (let [propName, propertyDescritor, map] of propertyDescriptors) {\r\n          const rawPropValue = propertyDescritor(descriptionContext);\r\n          let propValue =\r\n            map !== false\r\n              ? map.apply(null, rawPropValue.concat([descriptionContext]))\r\n              : rawPropValue;\r\n\r\n          if (typeof propValue === 'function' && !propValue[isDispatcher]) {\r\n            propValue = propValue(descriptionContext);\r\n          }\r\n\r\n          if (propName === '*') {\r\n            Object.assign(mappedProps, propValue);\r\n          } else {\r\n            mappedProps[propName] = propValue;\r\n          }\r\n        }\r\n\r\n        return mappedProps;\r\n      }\r\n\r\n      return hocs.reduce(\r\n        (component, hoc) => hoc(component),\r\n        class ComponentWrapper extends React.Component {\r\n          constructor(props) {\r\n            super(props);\r\n            // perform first mapping\r\n            // collect all dependency stores if any\r\n            this.mappedProps = mapProps(props);\r\n\r\n            const handleChange = () => this.setState(dummyState);\r\n\r\n            stores.forEach(store => store.subscribe(handleChange));\r\n          }\r\n\r\n          shouldComponentUpdate(nextProps) {\r\n            const nextMappedProps = mapProps(nextProps);\r\n            if (shallowEqual(nextMappedProps, this.mappedProps, true))\r\n              return false;\r\n            this.mappedProps = nextMappedProps;\r\n            return true;\r\n          }\r\n\r\n          render() {\r\n            return React.createElement(component, this.mappedProps);\r\n          }\r\n        }\r\n      );\r\n    };\r\n\r\n    if (defaultComponent) {\r\n      return hoc(defaultComponent);\r\n    }\r\n    return hoc;\r\n  };\r\n}\r\n\r\n/**\r\n * describe prop for component\r\n */\r\nexport function withProp(name, evaluatorFactory, map, options) {\r\n  return function({ addProperty, addStore }) {\r\n    const evaluator = evaluatorFactory({ addStore });\r\n\r\n    addProperty(\r\n      name,\r\n      function(descriptionContext) {\r\n        return evaluator(descriptionContext);\r\n      },\r\n      map,\r\n      options\r\n    );\r\n  };\r\n}\r\n\r\n// get value from store\r\nexport function fromStore(...stores) {\r\n  return function({ addStore }) {\r\n    stores.forEach(store => addStore(store));\r\n\r\n    return function() {\r\n      return stores.map(store => store.getState());\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * get value from props\r\n */\r\nexport function fromProp(...propNames) {\r\n  return function() {\r\n    return function({ ownedProps }) {\r\n      return propNames.map(propName => ownedProps[propName]);\r\n    };\r\n  };\r\n}\r\n\r\nfunction createPayloadFactory() {\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * add wired action to component props\r\n */\r\nexport function withAction(name, store, ...args) {\r\n  return function(describingContext) {\r\n    const { objectType, addProperty } = describingContext;\r\n    if (objectType === StoreType) {\r\n      return addProperty(\r\n        name,\r\n        Object.assign(store, { [isAction]: true }),\r\n        false\r\n      );\r\n    } else {\r\n      let getStore;\r\n      // withAction('name', store.action, payloadFactory)\r\n      if (typeof store === 'function') {\r\n        args.unshift(store);\r\n        getStore = store[StoreType];\r\n      } else {\r\n        getStore = () => {\r\n          return store;\r\n        };\r\n        // withAction('name', store, action, payloadFactory)\r\n      }\r\n      return addAction(describingContext, name, getStore, ...args);\r\n    }\r\n  };\r\n}\r\n\r\nfunction addAction(\r\n  describingContext,\r\n  name,\r\n  getStore,\r\n  action,\r\n  payloadFactory = defaultPayloadFactory\r\n) {\r\n  const { addProperty } = describingContext;\r\n\r\n  if (typeof payloadFactory === 'string') {\r\n    const ownedPropName = payloadFactory;\r\n    payloadFactory = () => ({ ownedProps }) => ownedProps[ownedPropName];\r\n  } else if (typeof payloadFactory !== 'function') {\r\n    payloadFactory = createPayloadFactory(payloadFactory, describingContext);\r\n  }\r\n\r\n  addProperty(\r\n    name,\r\n    function(descriptionContext) {\r\n      return Object.assign(\r\n        function() {\r\n          let payload = payloadFactory.apply(null, arguments);\r\n\r\n          if (typeof payload === 'function') {\r\n            payload = payload(descriptionContext);\r\n          }\r\n\r\n          return getStore().dispatch(action, payload);\r\n        },\r\n        {\r\n          [isDispatcher]: true\r\n        }\r\n      );\r\n    },\r\n    false\r\n  );\r\n}\r\n\r\nexport function withHoc(...hocs) {\r\n  return function({ addHoc }) {\r\n    hocs.forEach(addHoc);\r\n  };\r\n}\r\n\r\nexport function shallowEqual(value1, value2, ignoreFuncs) {\r\n  if (value1 === value2) return true;\r\n  // compare date\r\n  if (value1 instanceof Date && value2 instanceof Date) {\r\n    return value1.getTime() === value2.getTime();\r\n  }\r\n  if (value1 && value2) {\r\n    if (Array.isArray(value1)) {\r\n      const length = value1.length;\r\n      if (length !== value2.length) return false;\r\n      for (let i = 0; i < length; i++) {\r\n        const value1Prop = value1[i];\r\n        const value2Prop = value2[i];\r\n        if (\r\n          ignoreFuncs &&\r\n          typeof value1Prop === 'function' &&\r\n          typeof value2Prop === 'function'\r\n        )\r\n          continue;\r\n        if (value1Prop !== value2Prop) return false;\r\n      }\r\n      return true;\r\n    }\r\n    const value1Keys = Object.keys(value1);\r\n    if (value1Keys.length !== Object.keys(value2).length) return false;\r\n    for (let key of value1Keys) {\r\n      const value1Prop = value1[key];\r\n      const value2Prop = value2[key];\r\n      if (\r\n        ignoreFuncs &&\r\n        typeof value1Prop === 'function' &&\r\n        typeof value2Prop === 'function'\r\n      )\r\n        continue;\r\n      if (value1Prop !== value2Prop) return false;\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function debounce(interval, callback) {\r\n  let timer;\r\n\r\n  return function() {\r\n    const args = arguments;\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => callback.apply(null, args), interval);\r\n  };\r\n}\r\n\r\nexport function selector(...funcs) {\r\n  const lastFunc = funcs.pop();\r\n  let lastArgs, lastResult;\r\n  const wrapper = function(...args) {\r\n    if (shallowEqual(lastArgs, args)) {\r\n      return lastResult;\r\n    }\r\n    lastArgs = args;\r\n    return (lastResult = lastFunc.apply(null, args));\r\n  };\r\n\r\n  if (!funcs.length) {\r\n    return wrapper;\r\n  }\r\n\r\n  const argSelectors = funcs.map(x => selector(x));\r\n  return function(...args) {\r\n    const mappedArgs = argSelectors.map(x => x.apply(null, args));\r\n    return wrapper.apply(null, mappedArgs);\r\n  };\r\n}\r\n"]}