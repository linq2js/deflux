{"version":3,"sources":["../index.js"],"names":["React","defaultPropMapper","x","defaultPayloadFactory","ownedProps","mappedProps","inputArgs","dummyState","unsafeSetState","Symbol","unsafeUpdate","subscriptionUniqueId","create","factory","describers","update","target","Error","store","initialState","reducers","subscriptions","computedProps","linkedProps","middlewares","stores","describingContext","addReducer","addStore","addMiddleware","addProperty","currentState","updatingProps","recompute","prevState","descriptionContext","name","evaluator","computer","nextValue","apply","reducer","push","middleware","unshift","getState","updateLinkedProps","length","destProp","sourceProp","prevValue","setState","nextState","notify","descriptor","map","order","selector","dispatch","action","payload","actionResult","then","pendingDispatchings","reduce","next","state","reducerResult","args","subscribe","subscriber","id","unsubscribed","notifiedSubscriptions","unsubscribedIndexes","i","subscription","splice","pop","updateProps","linkedProp","forEach","describer","debouncedUpdateProps","debounce","undefined","subscribed","withReducer","withMiddleware","component","defaultComponent","hoc","propertyDescriptors","propName","sort","a","b","mapProps","propertyDescritor","rawPropValue","propValue","Object","assign","ComponentWrapper","Component","constructor","props","handleChange","shouldComponentUpdate","nextProps","nextMappedProps","shallowEqual","render","createElement","withProp","evaluatorFactory","fromStore","fromProp","propNames","createPayloadFactory","withAction","payloadFactory","value1","value2","ignoreFuncs","Date","getTime","Array","isArray","value1Prop","value2Prop","value1Keys","keys","key","interval","callback","timer","arguments","clearTimeout","setTimeout","funcs","lastFunc","lastArgs","lastResult","wrapper","argSelectors","mappedArgs"],"mappings":"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","file":"index.js","sourcesContent":["import React from 'react';\r\n\r\nconst defaultPropMapper = x => x;\r\nconst defaultPayloadFactory = (ownedProps, mappedProps, inputArgs) =>\r\n  inputArgs[0];\r\nconst dummyState = {};\r\nconst unsafeSetState = Symbol('SetState');\r\nconst unsafeUpdate = Symbol('Update');\r\nlet subscriptionUniqueId = 1;\r\n\r\nexport function create(factory, ...describers) {\r\n  return factory(describers);\r\n}\r\n\r\nexport function update(target, ...describers) {\r\n  if (unsafeUpdate in target) {\r\n    return target[unsafeUpdate](describers);\r\n  }\r\n  throw new Error('Target object does not support update');\r\n}\r\n\r\n/**\r\n * create a store\r\n */\r\nexport function store(initialState) {\r\n  return function(describers) {\r\n    const reducers = [];\r\n    const subscriptions = [];\r\n    const computedProps = [];\r\n    const linkedProps = [];\r\n    const middlewares = [];\r\n    const stores = [];\r\n    const describingContext = {\r\n      addReducer,\r\n      addStore,\r\n      addMiddleware,\r\n      addProperty\r\n    };\r\n    let currentState = initialState;\r\n    let updatingProps = false;\r\n    let store;\r\n\r\n    function recompute() {\r\n      const prevState = currentState;\r\n      const descriptionContext = {\r\n        ownedProps: currentState\r\n      };\r\n      for (let [name, evaluator, computer] of computedProps) {\r\n        const nextValue = computer.apply(null, evaluator(descriptionContext));\r\n\r\n        if (nextValue !== currentState[name]) {\r\n          if (currentState === prevState) {\r\n            currentState = {\r\n              ...currentState\r\n            };\r\n          }\r\n\r\n          currentState[name] = nextValue;\r\n        }\r\n      }\r\n    }\r\n\r\n    function addReducer(reducer) {\r\n      reducers.push(reducer);\r\n    }\r\n\r\n    function addStore(store) {\r\n      stores.push(store);\r\n    }\r\n\r\n    function addMiddleware(middleware) {\r\n      middlewares.unshift(middleware);\r\n    }\r\n\r\n    function getState() {\r\n      return currentState;\r\n    }\r\n\r\n    function updateLinkedProps() {\r\n      if (linkedProps.length) {\r\n        if (updatingProps) return;\r\n        try {\r\n          for (let [destProp, store, sourceProp] of linkedProps) {\r\n            const nextValue = currentState[destProp];\r\n            const prevValue =\r\n              sourceProp === '*'\r\n                ? store.getState()\r\n                : store.getState()[sourceProp];\r\n            // update source store\r\n            if (nextValue !== prevValue) {\r\n              if (sourceProp === '*') {\r\n                store[unsafeSetState](nextValue);\r\n              } else {\r\n                store[unsafeSetState]({\r\n                  ...store.getState(),\r\n                  [sourceProp]: nextValue\r\n                });\r\n              }\r\n            }\r\n          }\r\n        } finally {\r\n          updatingProps = false;\r\n        }\r\n      }\r\n    }\r\n\r\n    function setState(nextState) {\r\n      if (nextState === currentState) return;\r\n      currentState = nextState;\r\n      updateLinkedProps();\r\n      // re-compute\r\n      recompute();\r\n\r\n      notify();\r\n    }\r\n\r\n    function addProperty(name, descriptor, map = name, order = 0) {\r\n      if (typeof map === 'string') {\r\n        // create linked prop\r\n        if (!stores.length) {\r\n          throw new Error('At least store required to create linked prop');\r\n        } else if (stores.length > 1) {\r\n          throw new Error('Linked prop requires only a store');\r\n        }\r\n        linkedProps.push([name, stores[0], map]);\r\n      } else {\r\n        computedProps.push([name, descriptor, selector(map)]);\r\n      }\r\n    }\r\n\r\n    function dispatch(action, payload) {\r\n      let actionResult = action(payload);\r\n      if (typeof actionResult === 'function') {\r\n        actionResult = actionResult(currentState);\r\n        if (typeof actionResult === 'function') {\r\n          actionResult = actionResult(dispatch, getState);\r\n          return actionResult;\r\n        } else {\r\n          // new state\r\n          if (actionResult && typeof actionResult.then === 'function') {\r\n            return actionResult.then(setState);\r\n          } else {\r\n            setState(actionResult);\r\n          }\r\n        }\r\n      } else {\r\n        // action creator result\r\n        // call middlewares and reducers\r\n        const pendingDispatchings = [];\r\n        const prevState = currentState;\r\n        currentState = middlewares.reduce(\r\n          (next, middleware) => {\r\n            return function(action, payload) {\r\n              return middleware(store)(next)(action, payload);\r\n            };\r\n          },\r\n          (action, payload) => {\r\n            return reducers.reduce((state, reducer) => {\r\n              const reducerResult = reducer(state, action, payload);\r\n              // support lazy dispatching inside reducer\r\n              if (typeof reducerResult === 'function') {\r\n                reducerResult((...args) => pendingDispatchings.push(args));\r\n                return state;\r\n              }\r\n              return reducerResult;\r\n            }, currentState);\r\n          }\r\n        )(action, actionResult);\r\n\r\n        if (currentState !== prevState) {\r\n          updateLinkedProps();\r\n          recompute();\r\n          notify();\r\n        }\r\n\r\n        if (pendingDispatchings.length) {\r\n          for (let [action, payload] of pendingDispatchings) {\r\n            dispatch(action, payload);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function subscribe(subscriber) {\r\n      if (!subscriber.id) {\r\n        subscriber.id = subscriptionUniqueId++;\r\n      }\r\n      subscriptions.push(subscriber);\r\n\r\n      return function() {\r\n        subscriber.unsubscribed = true;\r\n      };\r\n    }\r\n\r\n    function notify(notifiedSubscriptions = {}) {\r\n      const unsubscribedIndexes = [];\r\n      for (let i = 0; i < subscriptions.length; i++) {\r\n        const subscription = subscriptions[i];\r\n        // do nothing if subscription is unsubscribed\r\n        if (subscription.unsubscribed) {\r\n          unsubscribedIndexes.push(i);\r\n        } else if (subscription.id in notifiedSubscriptions) {\r\n          // do nothing if subscription is already notified\r\n        } else {\r\n          // mark subscription is notified\r\n          notifiedSubscriptions[subscription.id] = true;\r\n          subscription(currentState);\r\n        }\r\n      }\r\n\r\n      // remove unsubscribed subscriptions\r\n      while (unsubscribedIndexes.length) {\r\n        subscriptions.splice(unsubscribedIndexes.pop(), 1);\r\n      }\r\n    }\r\n\r\n    const updateProps = () => {\r\n      if (updatingProps) return;\r\n\r\n      updatingProps = true;\r\n      try {\r\n        const prevState = currentState;\r\n        for (let linkedProp of linkedProps) {\r\n          const [destProp, store, sourceProp] = linkedProp;\r\n          const nextValue =\r\n            sourceProp === '*'\r\n              ? store.getState()\r\n              : store.getState()[sourceProp];\r\n\r\n          if (currentState[destProp] !== nextValue) {\r\n            if (currentState === prevState) {\r\n              currentState = {\r\n                ...currentState\r\n              };\r\n            }\r\n\r\n            currentState[destProp] = nextValue;\r\n          }\r\n        }\r\n\r\n        if (currentState !== prevState) {\r\n          recompute();\r\n          notify();\r\n        }\r\n      } finally {\r\n        updatingProps = false;\r\n      }\r\n    };\r\n\r\n    function update(describers) {\r\n      describers.forEach(describer => describer(describingContext));\r\n\r\n      const debouncedUpdateProps = debounce(0, updateProps);\r\n\r\n      if (linkedProps.length) {\r\n        if (currentState === null || currentState === undefined) {\r\n          currentState = {};\r\n        }\r\n\r\n        linkedProps.forEach(linkedProp => {\r\n          if (linkedProp.subscribed) return;\r\n          linkedProp.subscribed = true;\r\n          linkedProp[1].subscribe(debouncedUpdateProps);\r\n        });\r\n\r\n        updateProps();\r\n      }\r\n\r\n      if (computedProps.length) {\r\n        recompute();\r\n      }\r\n    }\r\n\r\n    update(describers);\r\n\r\n    return (store = {\r\n      getState,\r\n      subscribe,\r\n      dispatch,\r\n      [unsafeUpdate]: update,\r\n      [unsafeSetState]: setState\r\n    });\r\n  };\r\n}\r\n\r\n/**\r\n * add reducer to store\r\n */\r\nexport function withReducer(...reducers) {\r\n  return function({ addReducer }) {\r\n    reducers.forEach(addReducer);\r\n  };\r\n}\r\n\r\n/**\r\n * add middleware to store\r\n */\r\nexport function withMiddleware(...middlewares) {\r\n  return function({ addMiddleware }) {\r\n    middlewares.forEach(addMiddleware);\r\n  };\r\n}\r\n\r\n/**\r\n * create a component/hoc\r\n */\r\nexport function component(defaultComponent) {\r\n  return function(describers) {\r\n    const hoc = function(component) {\r\n      const propertyDescriptors = [];\r\n      const stores = [];\r\n      const describingContext = {\r\n        component,\r\n        addStore,\r\n        addProperty\r\n      };\r\n      describers.forEach(describer => describer(describingContext));\r\n\r\n      function addStore(store) {\r\n        stores.push(store);\r\n      }\r\n\r\n      function addProperty(\r\n        name,\r\n        descriptor,\r\n        map = defaultPropMapper,\r\n        order = 0\r\n      ) {\r\n        if (typeof map === 'string') {\r\n          const propName = map;\r\n          map = x => x[propName];\r\n        }\r\n\r\n        propertyDescriptors.push([name, descriptor, map, order]);\r\n        // re-sort descriptors\r\n        propertyDescriptors.sort((a, b) => a[3] - b[3]);\r\n      }\r\n\r\n      function mapProps(ownedProps) {\r\n        const mappedProps = {};\r\n        const descriptionContext = {\r\n          ownedProps,\r\n          mappedProps\r\n        };\r\n\r\n        for (let [propName, propertyDescritor, map] of propertyDescriptors) {\r\n          const rawPropValue = propertyDescritor(descriptionContext);\r\n          const propValue =\r\n            map !== false ? map.apply(null, rawPropValue) : rawPropValue;\r\n\r\n          if (propName === '*') {\r\n            Object.assign(mappedProps, propValue);\r\n          } else {\r\n            mappedProps[propName] = propValue;\r\n          }\r\n        }\r\n\r\n        return mappedProps;\r\n      }\r\n\r\n      return class ComponentWrapper extends React.Component {\r\n        constructor(props) {\r\n          super(props);\r\n          // perform first mapping\r\n          // collect all dependency stores if any\r\n          this.mappedProps = mapProps(props);\r\n\r\n          const handleChange = () => this.setState(dummyState);\r\n\r\n          stores.forEach(store => store.subscribe(handleChange));\r\n        }\r\n\r\n        shouldComponentUpdate(nextProps) {\r\n          const nextMappedProps = mapProps(nextProps);\r\n          if (shallowEqual(nextMappedProps, this.mappedProps, true))\r\n            return false;\r\n          this.mappedProps = nextMappedProps;\r\n          return true;\r\n        }\r\n\r\n        render() {\r\n          return React.createElement(component, this.mappedProps);\r\n        }\r\n      };\r\n    };\r\n\r\n    if (defaultComponent) {\r\n      return hoc(defaultComponent);\r\n    }\r\n    return hoc;\r\n  };\r\n}\r\n\r\n/**\r\n * describe prop for component\r\n */\r\nexport function withProp(name, evaluatorFactory, map) {\r\n  return function({ addProperty, addStore }) {\r\n    const evaluator = evaluatorFactory({ addStore });\r\n\r\n    addProperty(\r\n      name,\r\n      function(descriptionContext) {\r\n        return evaluator(descriptionContext);\r\n      },\r\n      map\r\n    );\r\n  };\r\n}\r\n\r\n// get value from store\r\nexport function fromStore(...stores) {\r\n  return function({ addStore }) {\r\n    stores.forEach(store => addStore(store));\r\n\r\n    return function() {\r\n      return stores.map(store => store.getState());\r\n    };\r\n  };\r\n}\r\n\r\n/**\r\n * get value from props\r\n */\r\nexport function fromProp(...propNames) {\r\n  return function() {\r\n    return function({ ownedProps }) {\r\n      return propNames.map(propName => ownedProps[propName]);\r\n    };\r\n  };\r\n}\r\n\r\nfunction createPayloadFactory() {\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * add wired action to component props\r\n */\r\nexport function withAction(\r\n  name,\r\n  store,\r\n  action,\r\n  payloadFactory = defaultPayloadFactory\r\n) {\r\n  return function(describingContext) {\r\n    const { addProperty } = describingContext;\r\n    if (typeof payloadFactory !== 'function') {\r\n      payloadFactory = createPayloadFactory(payloadFactory, describingContext);\r\n    }\r\n\r\n    addProperty(\r\n      name,\r\n      function(descriptionContext) {\r\n        return function(...inputArgs) {\r\n          let payload = payloadFactory(\r\n            describingContext.ownedProps,\r\n            describingContext.mappedProps,\r\n            inputArgs\r\n          );\r\n\r\n          return store.dispatch(action, payload);\r\n        };\r\n      },\r\n      false\r\n    );\r\n  };\r\n}\r\n\r\nexport function shallowEqual(value1, value2, ignoreFuncs) {\r\n  if (value1 === value2) return true;\r\n  // compare date\r\n  if (value1 instanceof Date && value2 instanceof Date) {\r\n    return value1.getTime() === value2.getTime();\r\n  }\r\n  if (value1 && value2) {\r\n    if (Array.isArray(value1)) {\r\n      const length = value1.length;\r\n      if (length !== value2.length) return false;\r\n      for (let i = 0; i < length; i++) {\r\n        const value1Prop = value1[i];\r\n        const value2Prop = value2[i];\r\n        if (\r\n          ignoreFuncs &&\r\n          typeof value1Prop === 'function' &&\r\n          typeof value2Prop === 'function'\r\n        )\r\n          continue;\r\n        if (value1Prop !== value2Prop) return false;\r\n      }\r\n      return true;\r\n    }\r\n    const value1Keys = Object.keys(value1);\r\n    if (value1Keys.length !== Object.keys(value2).length) return false;\r\n    for (let key of value1Keys) {\r\n      const value1Prop = value1[key];\r\n      const value2Prop = value2[key];\r\n      if (\r\n        ignoreFuncs &&\r\n        typeof value1Prop === 'function' &&\r\n        typeof value2Prop === 'function'\r\n      )\r\n        continue;\r\n      if (value1Prop !== value2Prop) return false;\r\n    }\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function debounce(interval, callback) {\r\n  let timer;\r\n\r\n  return function() {\r\n    const args = arguments;\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => callback.apply(null, args), interval);\r\n  };\r\n}\r\n\r\nexport function selector(...funcs) {\r\n  const lastFunc = funcs.pop();\r\n  let lastArgs, lastResult;\r\n  const wrapper = function(...args) {\r\n    if (shallowEqual(lastArgs, args)) {\r\n      return lastResult;\r\n    }\r\n    lastArgs = args;\r\n    return (lastResult = lastFunc.apply(null, args));\r\n  };\r\n\r\n  if (!funcs.length) {\r\n    return wrapper;\r\n  }\r\n\r\n  const argSelectors = funcs.map(x => selector(x));\r\n  return function(...args) {\r\n    const mappedArgs = argSelectors.map(x => x.apply(null, args));\r\n    return wrapper.apply(null, mappedArgs);\r\n  };\r\n}"]}